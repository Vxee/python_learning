
#启动一个子进程并等待其结束

from multiprocessing import Process
import os

# 子进程要执行的代码
def run_proc(name):
    print 'Run child process %s (%s)...' % (name, os.getpid())

if __name__=='__main__':
    print 'Parent process %s.' % os.getpid()
    p = Process(target=run_proc, args=('test',))
    print 'Process will start.'
    p.start()
    p.join()  #join()方法可以等待子进程结束后再继续往下运行，通常用于进程间的同步。
    print 'Process end.'
----------------------------------------------------------------------    

# 执行结果
Parent process 928.
Process will start.
Run child process test (929)...
Process end.

# 对Pool对象调用join()方法会等待所有子进程执行完毕，调用join()之前必须先调用close()，调用close()之后就不能继续添加新的Process了。
# 进程间通信是通过Queue、Pipes等实现的。

